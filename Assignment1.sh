#!/bin/bash

#this script is for assignment 1 , create a system report
#started October 9th 2024 by kelvin
#we need to gather a bunch of data,then format

#the first line might be generated using;
#echo "system report generated by $myusername, $currentdatetime

#we have a lot of lines to produce,  so we will use a template instead of generating one output line at a time

#gather data  into variables
myusername="$USER"
currentdatetime="$(date)"
hostname="$(hostname)"
uptime="$(uptime)"

#we get the distro name and version from /etc/os-release
#this wont work on computer's without an /etc/os-release file!!
#source /etc/os-release is used to read and execute the content of the /etc/os-release file, after sourcing the variable used is  PRETTY_NAME
source /etc/os-release
OS="echo $PRETTY_NAME"
#run lscpu to extract the vendor ID and Model
vendor_id="$(lscpu | grep 'Vendor ID' )"
model_name="$(lscpu | grep 'Model name' )"
cpuINFO=" $vendor_id, $model_name"
#could no extract the current and maximum CPU speed
#run free -h to extract the size of ram installed
ram="$(free -h | grep "Mem:" | awk '{print $2}')"   
#run lsblk to extract the information of the disk
disks=$(lsblk -o NAME,MODEL,SIZE,TYPE | grep "disk" | awk '{print $2 " (" $1 ", " $3 ")"}' | paste -sd ", " -)
#run lspci to extract the video information
video=$(lspci | grep -i "vga" | cut -d: -f3)
#assigning hostname -f to fqdn
fqdn="$(hostname -f)"
# run hostname -I for the ip address
host_ip=$(hostname -I | awk '{print $1}') 
#extract the gateway from ip route
gateway=$(ip route | grep default | awk '{print $3}') 
#extract the dns ip from /etc/resolv.conf
#note will not work if you dont have /etc/resolv.conf available
dns=$(grep "nameserver" /etc/resolv.conf | awk '{print $2}')
echo "DNS Server: $dns"

#extract the interface name from ip link show
interface_name=$(ip -o link show | awk -F': ' '{print $2}' | head -n1) 
#extract the interface name from ip addr show
interface_ip=$(ip -o -4 addr show $interface_name | awk '{print $4}')
#extract the number of users and users logged onto the machine from who
users_logged=$(who | awk '{print $1}' | sort | uniq | paste -sd ", " -)
#extract the disk space from the list of disk space usage in a human readable format 
disk_space=$(df -h --output=target,avail | grep "^/" | awk '{print $1 ": " $2}' | paste -sd ", " -) 
#extract the number of processess on the system from the list of all proccess running 
process_count=$(ps -A --no-headers | wc -l) load_avg=$(uptime | awk -F'load average:' '{print $2}' | sed 's/,/ /g')
##extract the system memory usage from the system memory display
memory_alloc=$(free -h | awk '/Mem:/ {print "Total: "$2", Used: "$3", Free: "$4}')
#filters only the ports that are in the listening state
listening_ports=$(ss -tunlp | grep LISTEN | awk '{print $5}' | cut -d: -f2 | sort -n | uniq | paste -sd ", " -) 
#display the current status of the uncomplicated firewall
ufw_rules=$(sudo ufw status)














#produce report
cat <<EOF
System Report generated by $myusername, $currentdatetime
 
System Information
------------------
Hostname: $hostname
OS:  $PRETTY_NAME
Uptime: $uptime
 
Hardware Information
--------------------
cpu: $cpuINFO 
Speed: $cpuSpeed
Ram: $ram 
Disk(s):  $disks 
Video: $video 
 
Network Information
-------------------
FQDN:$fqdn 
Host Address:  $host_ip
Gateway IP: $gateway
DNS Server: $dns 
 
InterfaceName:  $interface_name 
IP Address: $interface_ip  
 
System Status
-------------
Users Logged In: $users_logged
Disk Space: $disk_space
Process Count:$process_count
Load Averages:$load_avg
Memory Allocation: $memory_alloc 
Listening Network Ports:  $listening_ports 
UFW Rules: $ufw_rules

EOF
